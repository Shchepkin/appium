For parallel testing use node

node appium -a IP_ADDRESS -p PORT -cp CALLBACK_PORT -bp BOOTSTRAP_PORT

 Description about Command:
 - node Appium: To start the instance with node with Appium located in the location too provide Appium server arguments
 - For address we have to pass “-a” with the address here address is “127.0.0.1”:  “ -a 127.0.0.1 “
 - For port we have to pass “-p” with port number here port number is “1234”:  “-p 1234 “
 - For callbackPort we have to pass “-cp” with port number here port number is “1234”:  “-cp 1234 “
 - For BootstrapPort we have to pass “-bp” with port number here port number is “2345”:  “-bp 2345 “

 So, we have to run two or more terminals and fill there such commands as:
 node appium -a 127.0.0.1 -p 1234 -cp 1234 -bp 2345
 node appium -a 127.0.0.2 -p 3456 -cp 3456 -bp 4567

 After that we have to write IP_ADDRESS and PORT in testng.xml

If you want to run more then one class with node, you have to use "--session-override" flag as bellow
 node /usr/local/bin/appium -a 127.0.0.1 -p 1234 -cp 1234 -bp 2345 --session-override
------------------------------------------------------------------------------------------------------------------------
 * 0123456789ABCDEF	    JiaYu       4.2.1
 * MTPB0252700596	    prestigio   4.4.2
 * SWIVR8YHDI7TYTS8	    lg          5.1
 * 81c6da4a7d63         Xiaomi R3S  6.0.1
------------------------------------------------------------------------------------------------------------------------
<= 2.7.9    capabilities.setCapability("appActivity", "com.ajaxsystems.activity.DashboardActivity");
>= 2.8.0    capabilities.setCapability("appActivity", "com.ajaxsystems.ui.activity.LauncherActivity");




"appSet": {
    "appPath": "/home/installer/Android/AndroidApp/actualTestBuild/actualBuild.apk",
    "appPackage": "com.ajaxsystems",
    "appActivity": "com.ajaxsystems.ui.activity.LauncherActivity"
  },

------------------------------------------------------------------------------------------------------------------------
how to know package and launchable-activity
installer@ajaxGod ~/Android/Sdk/build-tools/25.0.0 $ ./aapt dump badging ~/Android/AndroidApp/build.2.9.0.apk | grep "package"
installer@ajaxGod ~/Android/Sdk/build-tools/25.0.0 $ ./aapt dump badging ~/Android/AndroidApp/build.2.9.0.apk | grep "launchable-activity"
--------------------------------------------------------------------------------------------------------
""" Спросить версию """
command = 'ver'

""" Установить версию """
command = 'ver xxxxx'
xxxxx - произвольная стринга

""" Установить параметры сокета/свича (одинаковые для всех)"""
command = 'pow %s %s %s %s' % (soc_stat, soc_i, soc_u, soc_power)

""" Очистить память имитатора """
command = 'cln'

""" Установить частоу """
command = 'frq %s' % frequency_

""" Добавить датчик в имитатор
dev_id: ID имитируемого датчика
dev_type: тип девайса
dev_numb: номер ячейки в имитаторе, в которой храниться датчик
"""
command = 'add %s %s %s' % (str(dev_id)[-6:], dev_numb, dev_type)

""" Редактировать параметры датчика
dev_id: ID имитируемого датчика
bat: заряд батареи
temp: температура датчика
"""
command = "ext %s %s %s" % (str(dev_id)[-6:], bat, temp_)

""" Приписать девайс к централи """
command = 'reg %s' % str(dev_id)[-6:]

""" Имитировать тревогу """
command = 'alm %s' % dev_id
------------------------------------------------------------------------------------------------------------------------
private long start, finish;
start = System.nanoTime();
finish = System.nanoTime();
System.out.println("time " + String.format("%4.2f",(float)(finish - start)/1000000000) + " sec");
------------------------------------------------------------------------------------------------------------------------
The list of accepted attribute names can be found in boolean attributes and string attributes.

The boolean attributes are:
enabled
checkable
checked
clickable
focusable
focused
longClickable
scrollable
selected
displayed

The string attibutes are:
contentDescription
text
className
resourceId
